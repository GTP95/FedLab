Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/focal64"
  config.vm.network "public_network", auto_config: false
  
  #Copy all the needed scripts inside the VM
  config.vm.provision "file", source: "iptables.sh", destination: "~/iptables.sh"
  config.vm.provision "file", source: "../client/arpRules.sh", destination: "~/arpRules.sh"
  config.vm.provision "file", source: "../client/arp_watchdog.py", destination: "~/arp_watchdog.py"
  config.vm.provision "file", source: "../client/init.sh", destination: "~/init.sh"
  #In next line, substitute "certificate.ovpn" with the name of your OpenVPN certificate
  config.vm.provision "file", source: "certificate.ovpn", destination: "~/certificate.ovpn"
  
  #Update VM and install OpenVPN
  config.vm.provision"shell", inline: "sudo apt update && sudo apt -y upgrade && sudo apt -y autoremove"
  config.vm.provision "shell", inline: "sudo apt -y install openvpn"
  
  config.vm.provision "shell", inline: "echo enabling traffic forwaring"
  config.vm.provision "shell", inline: "echo 1 > /proc/sys/net/ipv4/ip_forward", run: 'always'

  config.vm.provision "shell", inline: "echo configuring iptables"
  config.vm.provision "shell", inline: "sudo bash iptables.sh", run: 'always'
  
  config.vm.provision "shell", inline: "echo starting OpenVPN"
  #In next line, substitute "certificate.ovpn" with the name of your OpenVPN certificate	
  config.vm.provision :shell, inline: "sudo openvpn --config certificate.ovpn", run: 'always'
end
